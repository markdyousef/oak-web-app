exports[`test renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div>
    <TopBar
        cardId="2"
        close={[Function]}
        collectionId="1"
        edit={[Function]}
        save={[Function]}
        showComments={[Function]}
        showEdit={false} />
    <styled.section>
        <div />
    </styled.section>
</styled.div>,
  "nodes": Array [
    <styled.div>
      <TopBar
            cardId="2"
            close={[Function]}
            collectionId="1"
            edit={[Function]}
            save={[Function]}
            showComments={[Function]}
            showEdit={false} />
      <styled.section>
            <div />
      </styled.section>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <CardDetail
        close={[Function]}
        create={[Function]}
        params={
                Object {
                        "cardId": "2",
                        "collectionId": "1",
                      }
        }
        router={
                Object {
                        "goBack": [Function],
                      }
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": CardDetail {
        "_reactInternalInstance": [Circular],
        "cardId": "2",
        "collectionId": "1",
        "context": Object {},
        "onSave": [Function],
        "props": Object {
          "close": [Function],
          "create": [Function],
          "params": Object {
            "cardId": "2",
            "collectionId": "1",
          },
          "router": Object {
            "goBack": [Function],
          },
        },
        "refs": Object {},
        "renderComments": [Function],
        "renderTopBar": [Function],
        "state": Object {
          "content": null,
          "isSaved": false,
          "message": null,
          "showComments": false,
          "showEdit": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div>
          <TopBar
                    cardId="2"
                    close={[Function]}
                    collectionId="1"
                    edit={[Function]}
                    save={[Function]}
                    showComments={[Function]}
                    showEdit={false} />
          <styled.section>
                    <div />
          </styled.section>
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div>
          <TopBar
                    cardId="2"
                    close={[Function]}
                    collectionId="1"
                    edit={[Function]}
                    save={[Function]}
                    showComments={[Function]}
                    showEdit={false} />
          <styled.section>
                    <div />
          </styled.section>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <CardDetail
    close={[Function]}
    create={[Function]}
    params={
        Object {
            "cardId": "2",
            "collectionId": "1",
          }
    }
    router={
        Object {
            "goBack": [Function],
          }
    } />,
}
`;
