exports[`test renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div>
    <TopBar
        existingCard={undefined}
        isLoading={undefined}
        onClose={undefined}
        onEdit={undefined}
        onSave={undefined}
        onShowLabels={undefined}
        showComments={undefined}
        showEdit={undefined}
        showLabels={undefined} />
    <styled.div>
        <styled.section>
            <styled.div>
                <App
                    addFile={undefined}
                    editorState={undefined}
                    onChange={undefined}
                    placeholder="Write something"
                    readOnly={true}
                    showFAB={true}
                    titel={
                        <Unknown
                            name={undefined}
                            onChange={undefined}
                            readOnly={true} />
                    } />
            </styled.div>
        </styled.section>
    </styled.div>
</styled.div>,
  "nodes": Array [
    <styled.div>
      <TopBar
            existingCard={undefined}
            isLoading={undefined}
            onClose={undefined}
            onEdit={undefined}
            onSave={undefined}
            onShowLabels={undefined}
            showComments={undefined}
            showEdit={undefined}
            showLabels={undefined} />
      <styled.div>
            <styled.section>
                  <styled.div>
                        <App
                              addFile={undefined}
                              editorState={undefined}
                              onChange={undefined}
                              placeholder="Write something"
                              readOnly={true}
                              showFAB={true}
                              titel={
                                    <Unknown
                                          name={undefined}
                                          onChange={undefined}
                                          readOnly={true} />
                              } />
                  </styled.div>
            </styled.section>
      </styled.div>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <CardDetail
        addLabel={[Function]}
        create={[Function]}
        createComment={[Function]}
        params={Object {}}
        removeLabel={[Function]}
        router={Object {}}
        update={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "addLabel": [Function],
          "create": [Function],
          "createComment": [Function],
          "params": Object {},
          "removeLabel": [Function],
          "router": Object {},
          "update": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div>
          <TopBar
                    existingCard={undefined}
                    isLoading={undefined}
                    onClose={undefined}
                    onEdit={undefined}
                    onSave={undefined}
                    onShowLabels={undefined}
                    showComments={undefined}
                    showEdit={undefined}
                    showLabels={undefined} />
          <styled.div>
                    <styled.section>
                              <styled.div>
                                        <App
                                                  addFile={undefined}
                                                  editorState={undefined}
                                                  onChange={undefined}
                                                  placeholder="Write something"
                                                  readOnly={true}
                                                  showFAB={true}
                                                  titel={
                                                            <Unknown
                                                                      name={undefined}
                                                                      onChange={undefined}
                                                                      readOnly={true} />
                                                  } />
                              </styled.div>
                    </styled.section>
          </styled.div>
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div>
          <TopBar
                    existingCard={undefined}
                    isLoading={undefined}
                    onClose={undefined}
                    onEdit={undefined}
                    onSave={undefined}
                    onShowLabels={undefined}
                    showComments={undefined}
                    showEdit={undefined}
                    showLabels={undefined} />
          <styled.div>
                    <styled.section>
                              <styled.div>
                                        <App
                                                  addFile={undefined}
                                                  editorState={undefined}
                                                  onChange={undefined}
                                                  placeholder="Write something"
                                                  readOnly={true}
                                                  showFAB={true}
                                                  titel={
                                                            <Unknown
                                                                      name={undefined}
                                                                      onChange={undefined}
                                                                      readOnly={true} />
                                                  } />
                              </styled.div>
                    </styled.section>
          </styled.div>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <CardDetail
    addLabel={[Function]}
    create={[Function]}
    createComment={[Function]}
    params={Object {}}
    removeLabel={[Function]}
    router={Object {}}
    update={[Function]} />,
}
`;
