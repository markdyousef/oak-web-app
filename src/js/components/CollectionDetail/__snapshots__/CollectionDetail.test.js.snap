exports[`test renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div>
    <styled.section>
        <styled.div>
            <h1>
                <styled.div />
            </h1>
            <h3>
                <styled.div />
            </h3>
            <styled.div>
                <div>
                    <h3>
                        <styled.div />
                    </h3>
                    <h5>
                        <styled.div />
                    </h5>
                </div>
            </styled.div>
        </styled.div>
        <styled.div>
            <Unknown
                onClick={[Function]}
                text="Add Card"
                type="primary" />
            <Unknown
                onClick={[Function]}
                text="Edit Collection" />
        </styled.div>
    </styled.section>
    <Toolbar
        active="date"
        filters={Array []}
        labels={Array []}
        onFilter={[Function]}
        onSort={[Function]} />
    <div
        style={
            Object {
                "marginTop": "40px",
              }
        }>
        <Unknown />
    </div>
</styled.div>,
  "nodes": Array [
    <styled.div>
      <styled.section>
            <styled.div>
                  <h1>
                        <styled.div />
                  </h1>
                  <h3>
                        <styled.div />
                  </h3>
                  <styled.div>
                        <div>
                              <h3>
                                    <styled.div />
                              </h3>
                              <h5>
                                    <styled.div />
                              </h5>
                        </div>
                  </styled.div>
            </styled.div>
            <styled.div>
                  <Unknown
                        onClick={[Function]}
                        text="Add Card"
                        type="primary" />
                  <Unknown
                        onClick={[Function]}
                        text="Edit Collection" />
            </styled.div>
      </styled.section>
      <Toolbar
            active="date"
            filters={Array []}
            labels={Array []}
            onFilter={[Function]}
            onSort={[Function]} />
      <div
            style={
                  Object {
                        "marginTop": "40px",
                      }
            }>
            <Unknown />
      </div>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <CollectionDetail
        data={
                Object {
                        "loading": true,
                      }
        }
        likeCard={[Function]}
        params={Object {}}
        removeCard={[Function]}
        router={Object {}}
        unlikeCard={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": CollectionDetail {
        "_reactInternalInstance": [Circular],
        "addCard": [Function],
        "context": Object {},
        "handleLike": [Function],
        "onFilter": [Function],
        "onSortCards": [Function],
        "props": Object {
          "data": Object {
            "loading": true,
          },
          "likeCard": [Function],
          "params": Object {},
          "removeCard": [Function],
          "router": Object {},
          "unlikeCard": [Function],
        },
        "refs": Object {},
        "removeCard": [Function],
        "renderCards": [Function],
        "renderInfo": [Function],
        "showDialog": [Function],
        "state": Object {
          "cards": Array [],
          "filterVals": Array [],
          "labels": Array [],
          "showEdit": false,
          "sortKey": "date",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div>
          <styled.section>
                    <styled.div>
                              <h1>
                                        <styled.div />
                              </h1>
                              <h3>
                                        <styled.div />
                              </h3>
                              <styled.div>
                                        <div>
                                                  <h3>
                                                            <styled.div />
                                                  </h3>
                                                  <h5>
                                                            <styled.div />
                                                  </h5>
                                        </div>
                              </styled.div>
                    </styled.div>
                    <styled.div>
                              <Unknown
                                        onClick={[Function]}
                                        text="Add Card"
                                        type="primary" />
                              <Unknown
                                        onClick={[Function]}
                                        text="Edit Collection" />
                    </styled.div>
          </styled.section>
          <Toolbar
                    active="date"
                    filters={Array []}
                    labels={Array []}
                    onFilter={[Function]}
                    onSort={[Function]} />
          <div
                    style={
                              Object {
                                        "marginTop": "40px",
                                      }
                    }>
                    <Unknown />
          </div>
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div>
          <styled.section>
                    <styled.div>
                              <h1>
                                        <styled.div />
                              </h1>
                              <h3>
                                        <styled.div />
                              </h3>
                              <styled.div>
                                        <div>
                                                  <h3>
                                                            <styled.div />
                                                  </h3>
                                                  <h5>
                                                            <styled.div />
                                                  </h5>
                                        </div>
                              </styled.div>
                    </styled.div>
                    <styled.div>
                              <Unknown
                                        onClick={[Function]}
                                        text="Add Card"
                                        type="primary" />
                              <Unknown
                                        onClick={[Function]}
                                        text="Edit Collection" />
                    </styled.div>
          </styled.section>
          <Toolbar
                    active="date"
                    filters={Array []}
                    labels={Array []}
                    onFilter={[Function]}
                    onSort={[Function]} />
          <div
                    style={
                              Object {
                                        "marginTop": "40px",
                                      }
                    }>
                    <Unknown />
          </div>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <CollectionDetail
    data={
        Object {
            "loading": true,
          }
    }
    likeCard={[Function]}
    params={Object {}}
    removeCard={[Function]}
    router={Object {}}
    unlikeCard={[Function]} />,
}
`;
