exports[`test renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div>
    <styled.section>
        <div>
            Loading 
        </div>
        <styled.div>
            <Button
                onClick={[Function]}
                rounded={false}
                text="Add Card"
                type="primary" />
            <Button
                onClick={[Function]}
                rounded={false}
                text="Edit Collection"
                type={null} />
        </styled.div>
    </styled.section>
    <div>
        LOADING
    </div>
</styled.div>,
  "nodes": Array [
    <styled.div>
      <styled.section>
            <div>
                  Loading 
            </div>
            <styled.div>
                  <Button
                        onClick={[Function]}
                        rounded={false}
                        text="Add Card"
                        type="primary" />
                  <Button
                        onClick={[Function]}
                        rounded={false}
                        text="Edit Collection"
                        type={null} />
            </styled.div>
      </styled.section>
      <div>
            LOADING
      </div>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <CollectionDetail
        data={
                Object {
                        "loading": true,
                      }
        }
        likeCard={[Function]}
        params={Object {}}
        removeCard={[Function]}
        router={Object {}}
        unlikeCard={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": CollectionDetail {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleLike": [Function],
        "props": Object {
          "data": Object {
            "loading": true,
          },
          "likeCard": [Function],
          "params": Object {},
          "removeCard": [Function],
          "router": Object {},
          "unlikeCard": [Function],
        },
        "refs": Object {},
        "removeCard": [Function],
        "renderCards": [Function],
        "renderInfo": [Function],
        "state": Object {
          "showEdit": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div>
          <styled.section>
                    <div>
                              Loading 
                    </div>
                    <styled.div>
                              <Button
                                        onClick={[Function]}
                                        rounded={false}
                                        text="Add Card"
                                        type="primary" />
                              <Button
                                        onClick={[Function]}
                                        rounded={false}
                                        text="Edit Collection"
                                        type={null} />
                    </styled.div>
          </styled.section>
          <div>
                    LOADING
          </div>
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div>
          <styled.section>
                    <div>
                              Loading 
                    </div>
                    <styled.div>
                              <Button
                                        onClick={[Function]}
                                        rounded={false}
                                        text="Add Card"
                                        type="primary" />
                              <Button
                                        onClick={[Function]}
                                        rounded={false}
                                        text="Edit Collection"
                                        type={null} />
                    </styled.div>
          </styled.section>
          <div>
                    LOADING
          </div>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <CollectionDetail
    data={
        Object {
            "loading": true,
          }
    }
    likeCard={[Function]}
    params={Object {}}
    removeCard={[Function]}
    router={Object {}}
    unlikeCard={[Function]} />,
}
`;
