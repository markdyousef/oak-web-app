exports[`[object Object] 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div
    showToolbar={true}
    style={Object {}}>
    <BlockToolbar
        editorState={Object {}}
        onToggle={[Function]} />
    <InlineToolbar
        editorState={Object {}}
        onToggle={[Function]} />
</styled.div>,
  "nodes": Array [
    <styled.div
      showToolbar={true}
      style={Object {}}>
      <BlockToolbar
            editorState={Object {}}
            onToggle={[Function]} />
      <InlineToolbar
            editorState={Object {}}
            onToggle={[Function]} />
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Toolbar
        editorNode={Object {}}
        editorState={Object {}}
        focus={[Function]}
        showToolbar={true}
        toggleBlockType={[Function]}
        toggleInlineStyle={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Toolbar {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "editorNode": Object {},
          "editorState": Object {},
          "focus": [Function],
          "showToolbar": true,
          "toggleBlockType": [Function],
          "toggleInlineStyle": [Function],
        },
        "refs": Object {},
        "state": Object {
          "position": Object {},
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div
          showToolbar={true}
          style={Object {}}>
          <BlockToolbar
                    editorState={Object {}}
                    onToggle={[Function]} />
          <InlineToolbar
                    editorState={Object {}}
                    onToggle={[Function]} />
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div
          showToolbar={true}
          style={Object {}}>
          <BlockToolbar
                    editorState={Object {}}
                    onToggle={[Function]} />
          <InlineToolbar
                    editorState={Object {}}
                    onToggle={[Function]} />
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Toolbar
    editorNode={Object {}}
    editorState={Object {}}
    focus={[Function]}
    showToolbar={true}
    toggleBlockType={[Function]}
    toggleInlineStyle={[Function]} />,
}
`;
