exports[`test renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div
    className={undefined}
    onClick={[Function]}>
    <Decorated(Toolbar) />
    <PluginEditor
        customStyleMap={Object {}}
        decorators={Array []}
        defaultBlockRenderMap={true}
        defaultKeyBindings={true}
        editorState={
            EditorState {
                "_immutable": Object {
                  "allowUndo": true,
                  "currentContent": Object {
                    "blockMap": Object {
                      "evpha": Object {
                        "characterList": Array [],
                        "data": Object {},
                        "depth": 0,
                        "key": "evpha",
                        "text": "",
                        "type": "unstyled",
                      },
                    },
                    "entityMap": Object {
                      "__add": [Function],
                      "__create": [Function],
                      "__get": [Function],
                      "__getLastCreatedEntityKey": [Function],
                      "__mergeData": [Function],
                      "__replaceData": [Function],
                      "add": [Function],
                      "create": [Function],
                      "get": [Function],
                      "getLastCreatedEntityKey": [Function],
                      "mergeData": [Function],
                      "replaceData": [Function],
                    },
                    "selectionAfter": Object {
                      "anchorKey": "evpha",
                      "anchorOffset": 0,
                      "focusKey": "evpha",
                      "focusOffset": 0,
                      "hasFocus": false,
                      "isBackward": false,
                    },
                    "selectionBefore": Object {
                      "anchorKey": "evpha",
                      "anchorOffset": 0,
                      "focusKey": "evpha",
                      "focusOffset": 0,
                      "hasFocus": false,
                      "isBackward": false,
                    },
                  },
                  "decorator": null,
                  "directionMap": Object {
                    "evpha": "LTR",
                  },
                  "forceSelection": false,
                  "inCompositionMode": false,
                  "inlineStyleOverride": null,
                  "lastChangeType": null,
                  "nativelyRenderedContent": null,
                  "redoStack": Array [],
                  "selection": Object {
                    "anchorKey": "evpha",
                    "anchorOffset": 0,
                    "focusKey": "evpha",
                    "focusOffset": 0,
                    "hasFocus": false,
                    "isBackward": false,
                  },
                  "treeMap": Object {
                    "evpha": Array [
                      Object {
                        "decoratorKey": null,
                        "end": 0,
                        "leaves": Array [
                          Object {
                            "end": 0,
                            "start": 0,
                          },
                        ],
                        "start": 0,
                      },
                    ],
                  },
                  "undoStack": Array [],
                },
              }
        }
        onChange={[Function]}
        plugins={
            Array [
                Object {
                  "SideToolbar": [Function],
                  "initialize": [Function],
                  "onChange": [Function],
                },
              ]
        } />
</styled.div>,
  "nodes": Array [
    <styled.div
      className={undefined}
      onClick={[Function]}>
      <Decorated(Toolbar) />
      <PluginEditor
            customStyleMap={Object {}}
            decorators={Array []}
            defaultBlockRenderMap={true}
            defaultKeyBindings={true}
            editorState={
                  EditorState {
                        "_immutable": Object {
                          "allowUndo": true,
                          "currentContent": Object {
                            "blockMap": Object {
                              "evpha": Object {
                                "characterList": Array [],
                                "data": Object {},
                                "depth": 0,
                                "key": "evpha",
                                "text": "",
                                "type": "unstyled",
                              },
                            },
                            "entityMap": Object {
                              "__add": [Function],
                              "__create": [Function],
                              "__get": [Function],
                              "__getLastCreatedEntityKey": [Function],
                              "__mergeData": [Function],
                              "__replaceData": [Function],
                              "add": [Function],
                              "create": [Function],
                              "get": [Function],
                              "getLastCreatedEntityKey": [Function],
                              "mergeData": [Function],
                              "replaceData": [Function],
                            },
                            "selectionAfter": Object {
                              "anchorKey": "evpha",
                              "anchorOffset": 0,
                              "focusKey": "evpha",
                              "focusOffset": 0,
                              "hasFocus": false,
                              "isBackward": false,
                            },
                            "selectionBefore": Object {
                              "anchorKey": "evpha",
                              "anchorOffset": 0,
                              "focusKey": "evpha",
                              "focusOffset": 0,
                              "hasFocus": false,
                              "isBackward": false,
                            },
                          },
                          "decorator": null,
                          "directionMap": Object {
                            "evpha": "LTR",
                          },
                          "forceSelection": false,
                          "inCompositionMode": false,
                          "inlineStyleOverride": null,
                          "lastChangeType": null,
                          "nativelyRenderedContent": null,
                          "redoStack": Array [],
                          "selection": Object {
                            "anchorKey": "evpha",
                            "anchorOffset": 0,
                            "focusKey": "evpha",
                            "focusOffset": 0,
                            "hasFocus": false,
                            "isBackward": false,
                          },
                          "treeMap": Object {
                            "evpha": Array [
                              Object {
                                "decoratorKey": null,
                                "end": 0,
                                "leaves": Array [
                                  Object {
                                    "end": 0,
                                    "start": 0,
                                  },
                                ],
                                "start": 0,
                              },
                            ],
                          },
                          "undoStack": Array [],
                        },
                      }
            }
            onChange={[Function]}
            plugins={
                  Array [
                        Object {
                          "SideToolbar": [Function],
                          "initialize": [Function],
                          "onChange": [Function],
                        },
                      ]
            } />
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <MainEditor />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": MainEditor {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "focus": [Function],
        "onChange": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "editorState": EditorState {
            "_immutable": Object {
              "allowUndo": true,
              "currentContent": Object {
                "blockMap": Object {
                  "evpha": Object {
                    "characterList": Array [],
                    "data": Object {},
                    "depth": 0,
                    "key": "evpha",
                    "text": "",
                    "type": "unstyled",
                  },
                },
                "entityMap": Object {
                  "__add": [Function],
                  "__create": [Function],
                  "__get": [Function],
                  "__getLastCreatedEntityKey": [Function],
                  "__mergeData": [Function],
                  "__replaceData": [Function],
                  "add": [Function],
                  "create": [Function],
                  "get": [Function],
                  "getLastCreatedEntityKey": [Function],
                  "mergeData": [Function],
                  "replaceData": [Function],
                },
                "selectionAfter": Object {
                  "anchorKey": "evpha",
                  "anchorOffset": 0,
                  "focusKey": "evpha",
                  "focusOffset": 0,
                  "hasFocus": false,
                  "isBackward": false,
                },
                "selectionBefore": Object {
                  "anchorKey": "evpha",
                  "anchorOffset": 0,
                  "focusKey": "evpha",
                  "focusOffset": 0,
                  "hasFocus": false,
                  "isBackward": false,
                },
              },
              "decorator": null,
              "directionMap": Object {
                "evpha": "LTR",
              },
              "forceSelection": false,
              "inCompositionMode": false,
              "inlineStyleOverride": null,
              "lastChangeType": null,
              "nativelyRenderedContent": null,
              "redoStack": Array [],
              "selection": Object {
                "anchorKey": "evpha",
                "anchorOffset": 0,
                "focusKey": "evpha",
                "focusOffset": 0,
                "hasFocus": false,
                "isBackward": false,
              },
              "treeMap": Object {
                "evpha": Array [
                  Object {
                    "decoratorKey": null,
                    "end": 0,
                    "leaves": Array [
                      Object {
                        "end": 0,
                        "start": 0,
                      },
                    ],
                    "start": 0,
                  },
                ],
              },
              "undoStack": Array [],
            },
          },
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div
          className={undefined}
          onClick={[Function]}>
          <Decorated(Toolbar) />
          <PluginEditor
                    customStyleMap={Object {}}
                    decorators={Array []}
                    defaultBlockRenderMap={true}
                    defaultKeyBindings={true}
                    editorState={
                              EditorState {
                                        "_immutable": Object {
                                          "allowUndo": true,
                                          "currentContent": Object {
                                            "blockMap": Object {
                                              "evpha": Object {
                                                "characterList": Array [],
                                                "data": Object {},
                                                "depth": 0,
                                                "key": "evpha",
                                                "text": "",
                                                "type": "unstyled",
                                              },
                                            },
                                            "entityMap": Object {
                                              "__add": [Function],
                                              "__create": [Function],
                                              "__get": [Function],
                                              "__getLastCreatedEntityKey": [Function],
                                              "__mergeData": [Function],
                                              "__replaceData": [Function],
                                              "add": [Function],
                                              "create": [Function],
                                              "get": [Function],
                                              "getLastCreatedEntityKey": [Function],
                                              "mergeData": [Function],
                                              "replaceData": [Function],
                                            },
                                            "selectionAfter": Object {
                                              "anchorKey": "evpha",
                                              "anchorOffset": 0,
                                              "focusKey": "evpha",
                                              "focusOffset": 0,
                                              "hasFocus": false,
                                              "isBackward": false,
                                            },
                                            "selectionBefore": Object {
                                              "anchorKey": "evpha",
                                              "anchorOffset": 0,
                                              "focusKey": "evpha",
                                              "focusOffset": 0,
                                              "hasFocus": false,
                                              "isBackward": false,
                                            },
                                          },
                                          "decorator": null,
                                          "directionMap": Object {
                                            "evpha": "LTR",
                                          },
                                          "forceSelection": false,
                                          "inCompositionMode": false,
                                          "inlineStyleOverride": null,
                                          "lastChangeType": null,
                                          "nativelyRenderedContent": null,
                                          "redoStack": Array [],
                                          "selection": Object {
                                            "anchorKey": "evpha",
                                            "anchorOffset": 0,
                                            "focusKey": "evpha",
                                            "focusOffset": 0,
                                            "hasFocus": false,
                                            "isBackward": false,
                                          },
                                          "treeMap": Object {
                                            "evpha": Array [
                                              Object {
                                                "decoratorKey": null,
                                                "end": 0,
                                                "leaves": Array [
                                                  Object {
                                                    "end": 0,
                                                    "start": 0,
                                                  },
                                                ],
                                                "start": 0,
                                              },
                                            ],
                                          },
                                          "undoStack": Array [],
                                        },
                                      }
                    }
                    onChange={[Function]}
                    plugins={
                              Array [
                                        Object {
                                          "SideToolbar": [Function],
                                          "initialize": [Function],
                                          "onChange": [Function],
                                        },
                                      ]
                    } />
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div
          className={undefined}
          onClick={[Function]}>
          <Decorated(Toolbar) />
          <PluginEditor
                    customStyleMap={Object {}}
                    decorators={Array []}
                    defaultBlockRenderMap={true}
                    defaultKeyBindings={true}
                    editorState={
                              EditorState {
                                        "_immutable": Object {
                                          "allowUndo": true,
                                          "currentContent": Object {
                                            "blockMap": Object {
                                              "evpha": Object {
                                                "characterList": Array [],
                                                "data": Object {},
                                                "depth": 0,
                                                "key": "evpha",
                                                "text": "",
                                                "type": "unstyled",
                                              },
                                            },
                                            "entityMap": Object {
                                              "__add": [Function],
                                              "__create": [Function],
                                              "__get": [Function],
                                              "__getLastCreatedEntityKey": [Function],
                                              "__mergeData": [Function],
                                              "__replaceData": [Function],
                                              "add": [Function],
                                              "create": [Function],
                                              "get": [Function],
                                              "getLastCreatedEntityKey": [Function],
                                              "mergeData": [Function],
                                              "replaceData": [Function],
                                            },
                                            "selectionAfter": Object {
                                              "anchorKey": "evpha",
                                              "anchorOffset": 0,
                                              "focusKey": "evpha",
                                              "focusOffset": 0,
                                              "hasFocus": false,
                                              "isBackward": false,
                                            },
                                            "selectionBefore": Object {
                                              "anchorKey": "evpha",
                                              "anchorOffset": 0,
                                              "focusKey": "evpha",
                                              "focusOffset": 0,
                                              "hasFocus": false,
                                              "isBackward": false,
                                            },
                                          },
                                          "decorator": null,
                                          "directionMap": Object {
                                            "evpha": "LTR",
                                          },
                                          "forceSelection": false,
                                          "inCompositionMode": false,
                                          "inlineStyleOverride": null,
                                          "lastChangeType": null,
                                          "nativelyRenderedContent": null,
                                          "redoStack": Array [],
                                          "selection": Object {
                                            "anchorKey": "evpha",
                                            "anchorOffset": 0,
                                            "focusKey": "evpha",
                                            "focusOffset": 0,
                                            "hasFocus": false,
                                            "isBackward": false,
                                          },
                                          "treeMap": Object {
                                            "evpha": Array [
                                              Object {
                                                "decoratorKey": null,
                                                "end": 0,
                                                "leaves": Array [
                                                  Object {
                                                    "end": 0,
                                                    "start": 0,
                                                  },
                                                ],
                                                "start": 0,
                                              },
                                            ],
                                          },
                                          "undoStack": Array [],
                                        },
                                      }
                    }
                    onChange={[Function]}
                    plugins={
                              Array [
                                        Object {
                                          "SideToolbar": [Function],
                                          "initialize": [Function],
                                          "onChange": [Function],
                                        },
                                      ]
                    } />
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <MainEditor />,
}
`;
