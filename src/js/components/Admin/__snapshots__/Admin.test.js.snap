// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className={undefined}
>
    <div
        className={undefined}
    >
        <img
            alt="presentation"
            src="test-file-stub"
        />
        <div
            className={undefined}
        >
            <h1>
                 Hi there! Welcome to Cuest.
            </h1>
            <p>
                 We've created a team for you, so all you need to do is Sign in. 
            </p>
        </div>
    </div>
    <div
        className={undefined}
    >
        <div
            className={undefined}
        >
            <div>
                You dont have any teams yet
            </div>
        </div>
        <styled.button
            onClick={[Function]}
        >
            <span>
                Sign in to 
            </span>
        </styled.button>
    </div>
</div>,
  "nodes": Array [
    <div
      className={undefined}
>
      <div
            className={undefined}
      >
            <img
                  alt="presentation"
                  src="test-file-stub"
            />
            <div
                  className={undefined}
            >
                  <h1>
                         Hi there! Welcome to Cuest.
                  </h1>
                  <p>
                         We've created a team for you, so all you need to do is Sign in. 
                  </p>
            </div>
      </div>
      <div
            className={undefined}
      >
            <div
                  className={undefined}
            >
                  <div>
                        You dont have any teams yet
                  </div>
            </div>
            <styled.button
                  onClick={[Function]}
            >
                  <span>
                        Sign in to 
                  </span>
            </styled.button>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Admin
        createTeam={[Function]}
        data={Object {}}
        location={Object {}}
        router={Object {}}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Admin {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "onContinue": [Function],
        "props": Object {
          "createTeam": [Function],
          "data": Object {},
          "location": Object {},
          "router": Object {},
        },
        "refs": Object {},
        "renderTeams": [Function],
        "selectTeam": [Function],
        "state": Object {
          "activeTeam": null,
          "data": Object {},
          "message": null,
          "pathname": Object {},
          "router": Object {},
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className={undefined}
>
          <div
                    className={undefined}
          >
                    <img
                              alt="presentation"
                              src="test-file-stub"
                    />
                    <div
                              className={undefined}
                    >
                              <h1>
                                         Hi there! Welcome to Cuest.
                              </h1>
                              <p>
                                         We've created a team for you, so all you need to do is Sign in. 
                              </p>
                    </div>
          </div>
          <div
                    className={undefined}
          >
                    <div
                              className={undefined}
                    >
                              <div>
                                        You dont have any teams yet
                              </div>
                    </div>
                    <styled.button
                              onClick={[Function]}
                    >
                              <span>
                                        Sign in to 
                              </span>
                    </styled.button>
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className={undefined}
>
          <div
                    className={undefined}
          >
                    <img
                              alt="presentation"
                              src="test-file-stub"
                    />
                    <div
                              className={undefined}
                    >
                              <h1>
                                         Hi there! Welcome to Cuest.
                              </h1>
                              <p>
                                         We've created a team for you, so all you need to do is Sign in. 
                              </p>
                    </div>
          </div>
          <div
                    className={undefined}
          >
                    <div
                              className={undefined}
                    >
                              <div>
                                        You dont have any teams yet
                              </div>
                    </div>
                    <styled.button
                              onClick={[Function]}
                    >
                              <span>
                                        Sign in to 
                              </span>
                    </styled.button>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Admin
    createTeam={[Function]}
    data={Object {}}
    location={Object {}}
    router={Object {}}
/>,
}
`;
